# 상속 관계를 통해서 후손을 통한 객체를 생성하고 후손의 객체를 통해서
# 선조의 메소드와 후손의 메소드를 자유롭게 호출할 수 있다.
# 상속관계를 통해서 후손을 퉁한 객체 생성을 생성자를 통해서 확인 해보자.
class 선조:
    def __init__(self):#4.선조의 기본 생성자 
        print("선조의 생성자야") #5. 출력 


class 후손(선조):
    def __init__(self):# 2. 후손 클래스의 기본 생성자
        super().__init__()# 3. 선조의 기본 생성자 호출
        print("후손의 생성자야")# 6. 출력


    def sleep(self):
        print("졸려 죽겠다...")


if __name__ == "__main__":
    print("============2. 객체 생성시 상속 구현의 생성자를 확인 해보자.===============")
    a1 = 후손() #1. 후손 클래스의 기본 생성자 호출 # 7 a1에게 주소 대입
    a1.sleep()
    후손()

